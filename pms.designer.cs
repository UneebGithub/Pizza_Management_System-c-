#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pizza_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pms")]
	public partial class pmsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin_Login(Admin_Login instance);
    partial void UpdateAdmin_Login(Admin_Login instance);
    partial void DeleteAdmin_Login(Admin_Login instance);
    partial void Insertbarmenu_coffee(barmenu_coffee instance);
    partial void Updatebarmenu_coffee(barmenu_coffee instance);
    partial void Deletebarmenu_coffee(barmenu_coffee instance);
    partial void InsertBeef_steak(Beef_steak instance);
    partial void UpdateBeef_steak(Beef_steak instance);
    partial void DeleteBeef_steak(Beef_steak instance);
    partial void Insertburger(burger instance);
    partial void Updateburger(burger instance);
    partial void Deleteburger(burger instance);
    partial void Insertchicken_steak(chicken_steak instance);
    partial void Updatechicken_steak(chicken_steak instance);
    partial void Deletechicken_steak(chicken_steak instance);
    partial void Insertdesert(desert instance);
    partial void Updatedesert(desert instance);
    partial void Deletedesert(desert instance);
    partial void Insertdrinks_slush(drinks_slush instance);
    partial void Updatedrinks_slush(drinks_slush instance);
    partial void Deletedrinks_slush(drinks_slush instance);
    partial void InsertEmp_Login(Emp_Login instance);
    partial void UpdateEmp_Login(Emp_Login instance);
    partial void DeleteEmp_Login(Emp_Login instance);
    partial void InsertEmpInfo(EmpInfo instance);
    partial void UpdateEmpInfo(EmpInfo instance);
    partial void DeleteEmpInfo(EmpInfo instance);
    partial void Insertfried_chicken(fried_chicken instance);
    partial void Updatefried_chicken(fried_chicken instance);
    partial void Deletefried_chicken(fried_chicken instance);
    partial void Insertfry(fry instance);
    partial void Updatefry(fry instance);
    partial void Deletefry(fry instance);
    partial void InsertMembersInfo(MembersInfo instance);
    partial void UpdateMembersInfo(MembersInfo instance);
    partial void DeleteMembersInfo(MembersInfo instance);
    partial void Insertpasta(pasta instance);
    partial void Updatepasta(pasta instance);
    partial void Deletepasta(pasta instance);
    partial void Insertpizzamenu(pizzamenu instance);
    partial void Updatepizzamenu(pizzamenu instance);
    partial void Deletepizzamenu(pizzamenu instance);
    partial void Insertsandwich(sandwich instance);
    partial void Updatesandwich(sandwich instance);
    partial void Deletesandwich(sandwich instance);
    partial void Insertshakes_and_smoothy(shakes_and_smoothy instance);
    partial void Updateshakes_and_smoothy(shakes_and_smoothy instance);
    partial void Deleteshakes_and_smoothy(shakes_and_smoothy instance);
    partial void Insertspecialpizzamenu(specialpizzamenu instance);
    partial void Updatespecialpizzamenu(specialpizzamenu instance);
    partial void Deletespecialpizzamenu(specialpizzamenu instance);
    partial void Insertstarter(starter instance);
    partial void Updatestarter(starter instance);
    partial void Deletestarter(starter instance);
    partial void InsertTea_menu(Tea_menu instance);
    partial void UpdateTea_menu(Tea_menu instance);
    partial void DeleteTea_menu(Tea_menu instance);
    partial void InsertUser_Review(User_Review instance);
    partial void UpdateUser_Review(User_Review instance);
    partial void DeleteUser_Review(User_Review instance);
    #endregion
		
		public pmsDataContext() : 
				base(global::Pizza_Management_System.Properties.Settings.Default.pmsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public pmsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pmsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pmsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pmsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin_Login> Admin_Logins
		{
			get
			{
				return this.GetTable<Admin_Login>();
			}
		}
		
		public System.Data.Linq.Table<barmenu_coffee> barmenu_coffees
		{
			get
			{
				return this.GetTable<barmenu_coffee>();
			}
		}
		
		public System.Data.Linq.Table<Beef_steak> Beef_steaks
		{
			get
			{
				return this.GetTable<Beef_steak>();
			}
		}
		
		public System.Data.Linq.Table<burger> burgers
		{
			get
			{
				return this.GetTable<burger>();
			}
		}
		
		public System.Data.Linq.Table<chicken_steak> chicken_steaks
		{
			get
			{
				return this.GetTable<chicken_steak>();
			}
		}
		
		public System.Data.Linq.Table<desert> deserts
		{
			get
			{
				return this.GetTable<desert>();
			}
		}
		
		public System.Data.Linq.Table<drinks_slush> drinks_slushes
		{
			get
			{
				return this.GetTable<drinks_slush>();
			}
		}
		
		public System.Data.Linq.Table<Emp_Login> Emp_Logins
		{
			get
			{
				return this.GetTable<Emp_Login>();
			}
		}
		
		public System.Data.Linq.Table<EmpInfo> EmpInfos
		{
			get
			{
				return this.GetTable<EmpInfo>();
			}
		}
		
		public System.Data.Linq.Table<fried_chicken> fried_chickens
		{
			get
			{
				return this.GetTable<fried_chicken>();
			}
		}
		
		public System.Data.Linq.Table<fry> fries
		{
			get
			{
				return this.GetTable<fry>();
			}
		}
		
		public System.Data.Linq.Table<MembersInfo> MembersInfos
		{
			get
			{
				return this.GetTable<MembersInfo>();
			}
		}
		
		public System.Data.Linq.Table<pasta> pastas
		{
			get
			{
				return this.GetTable<pasta>();
			}
		}
		
		public System.Data.Linq.Table<pizzamenu> pizzamenus
		{
			get
			{
				return this.GetTable<pizzamenu>();
			}
		}
		
		public System.Data.Linq.Table<sandwich> sandwiches
		{
			get
			{
				return this.GetTable<sandwich>();
			}
		}
		
		public System.Data.Linq.Table<shakes_and_smoothy> shakes_and_smoothies
		{
			get
			{
				return this.GetTable<shakes_and_smoothy>();
			}
		}
		
		public System.Data.Linq.Table<specialpizzamenu> specialpizzamenus
		{
			get
			{
				return this.GetTable<specialpizzamenu>();
			}
		}
		
		public System.Data.Linq.Table<starter> starters
		{
			get
			{
				return this.GetTable<starter>();
			}
		}
		
		public System.Data.Linq.Table<Tea_menu> Tea_menus
		{
			get
			{
				return this.GetTable<Tea_menu>();
			}
		}
		
		public System.Data.Linq.Table<User_Review> User_Reviews
		{
			get
			{
				return this.GetTable<User_Review>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_Login")]
	public partial class Admin_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userid;
		
		private string _pass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(string value);
    partial void OnuseridChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    #endregion
		
		public Admin_Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.barmenu_coffee")]
	public partial class barmenu_coffee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _coffee_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncoffee_nameChanging(string value);
    partial void Oncoffee_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public barmenu_coffee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coffee_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string coffee_name
		{
			get
			{
				return this._coffee_name;
			}
			set
			{
				if ((this._coffee_name != value))
				{
					this.Oncoffee_nameChanging(value);
					this.SendPropertyChanging();
					this._coffee_name = value;
					this.SendPropertyChanged("coffee_name");
					this.Oncoffee_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Beef_steak")]
	public partial class Beef_steak : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _beef_steak_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onbeef_steak_nameChanging(string value);
    partial void Onbeef_steak_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public Beef_steak()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beef_steak_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string beef_steak_name
		{
			get
			{
				return this._beef_steak_name;
			}
			set
			{
				if ((this._beef_steak_name != value))
				{
					this.Onbeef_steak_nameChanging(value);
					this.SendPropertyChanging();
					this._beef_steak_name = value;
					this.SendPropertyChanged("beef_steak_name");
					this.Onbeef_steak_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.burger")]
	public partial class burger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _burger_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onburger_nameChanging(string value);
    partial void Onburger_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public burger()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_burger_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string burger_name
		{
			get
			{
				return this._burger_name;
			}
			set
			{
				if ((this._burger_name != value))
				{
					this.Onburger_nameChanging(value);
					this.SendPropertyChanging();
					this._burger_name = value;
					this.SendPropertyChanged("burger_name");
					this.Onburger_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chicken_steak")]
	public partial class chicken_steak : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _chicken_steak_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onchicken_steak_nameChanging(string value);
    partial void Onchicken_steak_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public chicken_steak()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chicken_steak_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string chicken_steak_name
		{
			get
			{
				return this._chicken_steak_name;
			}
			set
			{
				if ((this._chicken_steak_name != value))
				{
					this.Onchicken_steak_nameChanging(value);
					this.SendPropertyChanging();
					this._chicken_steak_name = value;
					this.SendPropertyChanged("chicken_steak_name");
					this.Onchicken_steak_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.desert")]
	public partial class desert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _desert_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondesert_nameChanging(string value);
    partial void Ondesert_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public desert()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desert_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string desert_name
		{
			get
			{
				return this._desert_name;
			}
			set
			{
				if ((this._desert_name != value))
				{
					this.Ondesert_nameChanging(value);
					this.SendPropertyChanging();
					this._desert_name = value;
					this.SendPropertyChanged("desert_name");
					this.Ondesert_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.drinks_slush")]
	public partial class drinks_slush : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _drink_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondrink_nameChanging(string value);
    partial void Ondrink_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public drinks_slush()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drink_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string drink_name
		{
			get
			{
				return this._drink_name;
			}
			set
			{
				if ((this._drink_name != value))
				{
					this.Ondrink_nameChanging(value);
					this.SendPropertyChanging();
					this._drink_name = value;
					this.SendPropertyChanged("drink_name");
					this.Ondrink_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emp_Login")]
	public partial class Emp_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Cuserid;
		
		private string _Cpass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCuseridChanging(string value);
    partial void OnCuseridChanged();
    partial void OnCpassChanging(string value);
    partial void OnCpassChanged();
    #endregion
		
		public Emp_Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuserid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Cuserid
		{
			get
			{
				return this._Cuserid;
			}
			set
			{
				if ((this._Cuserid != value))
				{
					this.OnCuseridChanging(value);
					this.SendPropertyChanging();
					this._Cuserid = value;
					this.SendPropertyChanged("Cuserid");
					this.OnCuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cpass
		{
			get
			{
				return this._Cpass;
			}
			set
			{
				if ((this._Cpass != value))
				{
					this.OnCpassChanging(value);
					this.SendPropertyChanging();
					this._Cpass = value;
					this.SendPropertyChanged("Cpass");
					this.OnCpassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpInfo")]
	public partial class EmpInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _fathername;
		
		private long _cnic;
		
		private long _phone;
		
		private string _post;
		
		private string _pre_ext;
		
		private string _adr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnfathernameChanging(string value);
    partial void OnfathernameChanged();
    partial void OncnicChanging(long value);
    partial void OncnicChanged();
    partial void OnphoneChanging(long value);
    partial void OnphoneChanged();
    partial void OnpostChanging(string value);
    partial void OnpostChanged();
    partial void Onpre_extChanging(string value);
    partial void Onpre_extChanged();
    partial void OnadrChanging(string value);
    partial void OnadrChanged();
    #endregion
		
		public EmpInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fathername", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fathername
		{
			get
			{
				return this._fathername;
			}
			set
			{
				if ((this._fathername != value))
				{
					this.OnfathernameChanging(value);
					this.SendPropertyChanging();
					this._fathername = value;
					this.SendPropertyChanged("fathername");
					this.OnfathernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cnic", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long cnic
		{
			get
			{
				return this._cnic;
			}
			set
			{
				if ((this._cnic != value))
				{
					this.OncnicChanging(value);
					this.SendPropertyChanging();
					this._cnic = value;
					this.SendPropertyChanged("cnic");
					this.OncnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="BigInt NOT NULL")]
		public long phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string post
		{
			get
			{
				return this._post;
			}
			set
			{
				if ((this._post != value))
				{
					this.OnpostChanging(value);
					this.SendPropertyChanging();
					this._post = value;
					this.SendPropertyChanged("post");
					this.OnpostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_ext", DbType="VarChar(100)")]
		public string pre_ext
		{
			get
			{
				return this._pre_ext;
			}
			set
			{
				if ((this._pre_ext != value))
				{
					this.Onpre_extChanging(value);
					this.SendPropertyChanging();
					this._pre_ext = value;
					this.SendPropertyChanged("pre_ext");
					this.Onpre_extChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adr", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string adr
		{
			get
			{
				return this._adr;
			}
			set
			{
				if ((this._adr != value))
				{
					this.OnadrChanging(value);
					this.SendPropertyChanging();
					this._adr = value;
					this.SendPropertyChanged("adr");
					this.OnadrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fried_chicken")]
	public partial class fried_chicken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fried_ck_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfried_ck_nameChanging(string value);
    partial void Onfried_ck_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public fried_chicken()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fried_ck_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string fried_ck_name
		{
			get
			{
				return this._fried_ck_name;
			}
			set
			{
				if ((this._fried_ck_name != value))
				{
					this.Onfried_ck_nameChanging(value);
					this.SendPropertyChanging();
					this._fried_ck_name = value;
					this.SendPropertyChanged("fried_ck_name");
					this.Onfried_ck_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fries")]
	public partial class fry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fries_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfries_nameChanging(string value);
    partial void Onfries_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public fry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fries_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string fries_name
		{
			get
			{
				return this._fries_name;
			}
			set
			{
				if ((this._fries_name != value))
				{
					this.Onfries_nameChanging(value);
					this.SendPropertyChanging();
					this._fries_name = value;
					this.SendPropertyChanged("fries_name");
					this.Onfries_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembersInfo")]
	public partial class MembersInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private long _phone;
		
		private string _adr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnphoneChanging(long value);
    partial void OnphoneChanged();
    partial void OnadrChanging(string value);
    partial void OnadrChanged();
    #endregion
		
		public MembersInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adr", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string adr
		{
			get
			{
				return this._adr;
			}
			set
			{
				if ((this._adr != value))
				{
					this.OnadrChanging(value);
					this.SendPropertyChanging();
					this._adr = value;
					this.SendPropertyChanged("adr");
					this.OnadrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pasta")]
	public partial class pasta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _pasta_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpasta_nameChanging(string value);
    partial void Onpasta_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public pasta()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pasta_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string pasta_name
		{
			get
			{
				return this._pasta_name;
			}
			set
			{
				if ((this._pasta_name != value))
				{
					this.Onpasta_nameChanging(value);
					this.SendPropertyChanging();
					this._pasta_name = value;
					this.SendPropertyChanged("pasta_name");
					this.Onpasta_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pizzamenu")]
	public partial class pizzamenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _pizza_name;
		
		private int _small_size;
		
		private int _medium_size;
		
		private int _large_size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpizza_nameChanging(string value);
    partial void Onpizza_nameChanged();
    partial void Onsmall_sizeChanging(int value);
    partial void Onsmall_sizeChanged();
    partial void Onmedium_sizeChanging(int value);
    partial void Onmedium_sizeChanged();
    partial void Onlarge_sizeChanging(int value);
    partial void Onlarge_sizeChanged();
    #endregion
		
		public pizzamenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pizza_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string pizza_name
		{
			get
			{
				return this._pizza_name;
			}
			set
			{
				if ((this._pizza_name != value))
				{
					this.Onpizza_nameChanging(value);
					this.SendPropertyChanging();
					this._pizza_name = value;
					this.SendPropertyChanged("pizza_name");
					this.Onpizza_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_small_size", DbType="Int NOT NULL")]
		public int small_size
		{
			get
			{
				return this._small_size;
			}
			set
			{
				if ((this._small_size != value))
				{
					this.Onsmall_sizeChanging(value);
					this.SendPropertyChanging();
					this._small_size = value;
					this.SendPropertyChanged("small_size");
					this.Onsmall_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medium_size", DbType="Int NOT NULL")]
		public int medium_size
		{
			get
			{
				return this._medium_size;
			}
			set
			{
				if ((this._medium_size != value))
				{
					this.Onmedium_sizeChanging(value);
					this.SendPropertyChanging();
					this._medium_size = value;
					this.SendPropertyChanged("medium_size");
					this.Onmedium_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_large_size", DbType="Int NOT NULL")]
		public int large_size
		{
			get
			{
				return this._large_size;
			}
			set
			{
				if ((this._large_size != value))
				{
					this.Onlarge_sizeChanging(value);
					this.SendPropertyChanging();
					this._large_size = value;
					this.SendPropertyChanged("large_size");
					this.Onlarge_sizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sandwich")]
	public partial class sandwich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _sandwich_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsandwich_nameChanging(string value);
    partial void Onsandwich_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public sandwich()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sandwich_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string sandwich_name
		{
			get
			{
				return this._sandwich_name;
			}
			set
			{
				if ((this._sandwich_name != value))
				{
					this.Onsandwich_nameChanging(value);
					this.SendPropertyChanging();
					this._sandwich_name = value;
					this.SendPropertyChanged("sandwich_name");
					this.Onsandwich_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shakes_and_smoothies")]
	public partial class shakes_and_smoothy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _shakes_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onshakes_nameChanging(string value);
    partial void Onshakes_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public shakes_and_smoothy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shakes_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string shakes_name
		{
			get
			{
				return this._shakes_name;
			}
			set
			{
				if ((this._shakes_name != value))
				{
					this.Onshakes_nameChanging(value);
					this.SendPropertyChanging();
					this._shakes_name = value;
					this.SendPropertyChanged("shakes_name");
					this.Onshakes_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.specialpizzamenu")]
	public partial class specialpizzamenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _pizza_name;
		
		private int _medium_size;
		
		private int _large_size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpizza_nameChanging(string value);
    partial void Onpizza_nameChanged();
    partial void Onmedium_sizeChanging(int value);
    partial void Onmedium_sizeChanged();
    partial void Onlarge_sizeChanging(int value);
    partial void Onlarge_sizeChanged();
    #endregion
		
		public specialpizzamenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pizza_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string pizza_name
		{
			get
			{
				return this._pizza_name;
			}
			set
			{
				if ((this._pizza_name != value))
				{
					this.Onpizza_nameChanging(value);
					this.SendPropertyChanging();
					this._pizza_name = value;
					this.SendPropertyChanged("pizza_name");
					this.Onpizza_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medium_size", DbType="Int NOT NULL")]
		public int medium_size
		{
			get
			{
				return this._medium_size;
			}
			set
			{
				if ((this._medium_size != value))
				{
					this.Onmedium_sizeChanging(value);
					this.SendPropertyChanging();
					this._medium_size = value;
					this.SendPropertyChanged("medium_size");
					this.Onmedium_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_large_size", DbType="Int NOT NULL")]
		public int large_size
		{
			get
			{
				return this._large_size;
			}
			set
			{
				if ((this._large_size != value))
				{
					this.Onlarge_sizeChanging(value);
					this.SendPropertyChanging();
					this._large_size = value;
					this.SendPropertyChanged("large_size");
					this.Onlarge_sizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.starters")]
	public partial class starter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _starters_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstarters_nameChanging(string value);
    partial void Onstarters_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public starter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starters_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string starters_name
		{
			get
			{
				return this._starters_name;
			}
			set
			{
				if ((this._starters_name != value))
				{
					this.Onstarters_nameChanging(value);
					this.SendPropertyChanging();
					this._starters_name = value;
					this.SendPropertyChanged("starters_name");
					this.Onstarters_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tea_menu")]
	public partial class Tea_menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tea_name;
		
		private int _price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontea_nameChanging(string value);
    partial void Ontea_nameChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public Tea_menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tea_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string tea_name
		{
			get
			{
				return this._tea_name;
			}
			set
			{
				if ((this._tea_name != value))
				{
					this.Ontea_nameChanging(value);
					this.SendPropertyChanging();
					this._tea_name = value;
					this.SendPropertyChanged("tea_name");
					this.Ontea_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Reviews")]
	public partial class User_Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private long _phone;
		
		private string _review_panel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(long value);
    partial void OnphoneChanged();
    partial void Onreview_panelChanging(string value);
    partial void Onreview_panelChanged();
    #endregion
		
		public User_Review()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="BigInt NOT NULL")]
		public long phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_panel", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string review_panel
		{
			get
			{
				return this._review_panel;
			}
			set
			{
				if ((this._review_panel != value))
				{
					this.Onreview_panelChanging(value);
					this.SendPropertyChanging();
					this._review_panel = value;
					this.SendPropertyChanged("review_panel");
					this.Onreview_panelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
